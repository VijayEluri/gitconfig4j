{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Configuration management of git-like properties for Java (git gitconfig java). ","body":"### Overview\r\nLibrary providing simple and lite git-config configuration support for Java, allowing to use this simple and clear configuration layout.\r\n```\r\n#\r\n# This is the config file, and\r\n# a '#' or ';' character indicates\r\n# a comment\r\n#\r\n\r\n; core variables\r\n[core]\r\n        ; Don't trust file modes\r\n        filemode = false\r\n\r\n; Our diff algorithm\r\n[diff]\r\n        external = /usr/local/bin/diff-wrapper\r\n        renames = true\r\n\r\n; Proxy settings\r\n[core]\r\n        gitproxy=\"proxy-command\" for kernel.org\r\n        gitproxy=default-proxy ; for all the rest\r\n\r\n\r\n```\r\n### Features\r\n* Support of most native git-config options.\r\n* Java native libraries (jre6).\r\n* External libraries not required.\r\n* Load of git-config-like configuration files.\r\n* Save of git-config-like configuration files.\r\n* Simple API for variables handling (as in git-config).\r\n\r\n### Limitations\r\n* Load/Save of comments not supported, even though, comments in files are allowed.\r\n* Section-variables are randomly ordered when saving.\r\n* Regex operations are not supported (planned for future releases.\r\n\r\n### Usage\r\n```java\r\npackage org.timo.gitconfig;\r\n\r\nimport java.io.IOException;\r\nimport java.util.logging.Logger;\r\n\r\npublic class GitConfigurationExample {\r\n\r\n\tprivate static final Logger LOG = Logger\r\n\t\t\t.getLogger(GitConfigurationExample.class.getName());\r\n\r\n\t/**\r\n\t * Test file contents:\r\n\t * \r\n\t * <pre>\r\n\t * # Comment 1\r\n\t * ; comment 2\r\n\t * [core]  \r\n\t *      autocrlf = false\r\n\t * \texcludesfile = /Users/timoteo/.gitignore\r\n\t * \t; inner comment\r\n\t * \teditor = emacs\t\t\r\n\t * \t\r\n\t * \t# end comment\r\n\t * [alias]\r\n\t *      last = cat-file commit HEAD\r\n\t * \t\t\r\n\t * [user]\r\n\t *      name = Timoteo Ponce\r\n\t * \temail = timoteo.ponce@swissbytes.ch\r\n\t * \r\n\t * [color]\r\n\t *      diff = auto\r\n\t * \tstatus = auto\r\n\t * \tbranch = auto\r\n\t * \tinteractive = auto\t\t\r\n\t * \r\n\t * [remote \"origin\"]\r\n\t *      url = http://git.kernel.org/pub/scm/git/git.git\r\n\t *      ; inner comment 2\r\n\t * \tfetch = +refs/heads/*:refs/remotes/origin/*\r\n\t * </pre>\r\n\t * \r\n\t * @param args\r\n\t * @throws IOException\r\n\t */\r\n\tpublic static void main(final String[] args) throws IOException {\r\n\t\tfinal Configuration config = new GitConfiguration();\r\n\t\t// load configuration fike\r\n\t\tconfig.load(\"resources/config-1\");\r\n\t\t// show its content\r\n\t\tLOG.info(\"Configuration content :\\n\" + config.getTextContent());\r\n\t\t\r\n\t\t// get some variables\r\n\t\tLOG.info(\"color.branch=\" + config.getValue(\"color.branch\") );\r\n\t\tLOG.info(\"user.name=\" + config.getValue(\"user.name\") );\r\n\t\tLOG.info(\"remote.origin.url=\" +\r\n                   config.getValue(\"remote.origin.url\") );\r\n\t\t\r\n\t\t// create a new section\r\n\t\tconfig.setValue(\"mysection.editor\", \"emacs\");\r\n\t\tconfig.setValue(\"mysection.emacs.command\", \"/usr/bin/emacs\");\r\n\t\t// show updated content\r\n\t\tLOG.info(\"Configuration content :\\n\" + config.getTextContent());\r\n\r\n\t\tLOG.info(\"Renaming section 'user' to 'custom '\");\r\n\t\tconfig.renameSection(\"user\", \"custom\");\r\n\r\n\t\tLOG.info(\"Configuration content :\\n\" + config.getTextContent());\r\n\r\n\t\tLOG.info(\"Renaming section 'remote.origin' to 'external.source'\");\r\n\t\tconfig.renameSection(\"remote.origin\", \"external.source\");\r\n\r\n\t\tLOG.info(\"Configuration content :\\n\" + config.getTextContent());\r\n\t}\r\n\r\n}\r\n```","name":"Gitconfig4j","google":""}